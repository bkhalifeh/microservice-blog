services:
  user-srv:
    build:
      target: development
      context: ./backend
      dockerfile: ./apps/user/Dockerfile
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env.development.user
    depends_on:
      - postgres-db
      - redis-cache
      - nats
    command: ["pnpm", "run", "dev", "user"]

  post-srv:
    build:
      target: development
      context: ./backend
      dockerfile: ./apps/post/Dockerfile
    volumes:
      - ./backend:/app
    env_file:
      - ./backend/.env.development.post
    depends_on:
      - postgres-db
      - redis-cache
      - nats
    command: ["pnpm", "run", "dev", "post"]

  redis-cache:
    image: redis:7.2.5-alpine3.20
    volumes:
      - redis-cache-vol:/data

  postgres-db:
    image: postgres:16.2-alpine3.19
    environment:
      POSTGRES_MULTIPLE_DATABASES: user_db,post_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
      PGDATA: /data/postgres
    volumes:
      - ./postgres:/docker-entrypoint-initdb.d
      - postgres-db-vol:/data/postgres

  pgadmin:
    image: dpage/pgadmin4:8.4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
      PGADMIN_LISTEN_PORT: 5050
    volumes:
      - pgadmin:/var/lib/pgadmin

  nats:
    image: nats:2.10.18-alpine3.20
    container_name: nats_main

  nginx:
    container_name: nginx
    image: nginx:stable-alpine3.17
    ports:
      - "3000:80"
    volumes:
      - ./nginx/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - pgadmin
      - user-srv

volumes:
  pgadmin:
  postgres-db-vol:
  redis-cache-vol:
